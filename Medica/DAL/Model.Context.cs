//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class MedicalEntities : DbContext
    {
        public MedicalEntities()
            : base("name=MedicalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<CONTRAINDICACION_DIAGNOSTICO> CONTRAINDICACION_DIAGNOSTICO { get; set; }
        public DbSet<CONTRAINDICACION_MEDICAMENTO> CONTRAINDICACION_MEDICAMENTO { get; set; }
        public DbSet<CONTRAINDICACION_SINTOMA> CONTRAINDICACION_SINTOMA { get; set; }
        public DbSet<DATOSPERSONALES> DATOSPERSONALES { get; set; }
        public DbSet<DIAGNOSTICO> DIAGNOSTICO { get; set; }
        public DbSet<DOSIS> DOSIS { get; set; }
        public DbSet<INDICACION_DIAGNOSTICO> INDICACION_DIAGNOSTICO { get; set; }
        public DbSet<INDICACION_SINTOMA> INDICACION_SINTOMA { get; set; }
        public DbSet<MEDI_NOMBRE> MEDI_NOMBRE { get; set; }
        public DbSet<MEDICAMENTO> MEDICAMENTO { get; set; }
        public DbSet<PACIENTE> PACIENTE { get; set; }
        public DbSet<PACIENTE_SINTOMA> PACIENTE_SINTOMA { get; set; }
        public DbSet<PADECIMIENTO> PADECIMIENTO { get; set; }
        public DbSet<SIGNOS_VITALES> SIGNOS_VITALES { get; set; }
        public DbSet<SINTOMA> SINTOMA { get; set; }
        public DbSet<USUARIO> USUARIO { get; set; }
        public DbSet<VIA_ADMINISTRACION> VIA_ADMINISTRACION { get; set; }
        public DbSet<PACIENTE_MEDICAMENTO> PACIENTE_MEDICAMENTO { get; set; }
        public DbSet<VistaPacienteMedicamento> VistaPacienteMedicamento { get; set; }
        public DbSet<VistaMedicamentosContraindicacion> VistaMedicamentosContraindicacion { get; set; }
    
        public virtual int EstadoPresionAlta(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EstadoPresionAlta", iDParameter);
        }
    
        public virtual int EstadoPresionBaja(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EstadoPresionBaja", iDParameter);
        }
    
        public virtual int EstadoPresionNormal(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EstadoPresionNormal", iDParameter);
        }
    
        public virtual int EstadoPulsoAlta(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EstadoPulsoAlta", iDParameter);
        }
    
        public virtual int EstadoPulsoBaja(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EstadoPulsoBaja", iDParameter);
        }
    
        public virtual int EstadoPulsoNormal(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EstadoPulsoNormal", iDParameter);
        }
    
        public virtual int EstadoSaturacionAlta(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EstadoSaturacionAlta", iDParameter);
        }
    
        public virtual int EstadoSaturacionBaja(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EstadoSaturacionBaja", iDParameter);
        }
    
        public virtual int EstadoSaturacionNormal(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EstadoSaturacionNormal", iDParameter);
        }
    
        public virtual int EstadoTemperaturaAlta(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EstadoTemperaturaAlta", iDParameter);
        }
    
        public virtual int EstadoTemperaturaBaja(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EstadoTemperaturaBaja", iDParameter);
        }
    
        public virtual int EstadoTemperaturaNormal(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EstadoTemperaturaNormal", iDParameter);
        }
    }
}
